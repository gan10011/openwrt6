name: OpenWrt Memory-Optimized Build

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description:0.0.1 '固件版本号 (例如: v1.0.0)'
        required: true

env:
  CCACHE_DIR: ${{ github.workspace }}/ccache
  BUILD_DIR: ${{ github.workspace }}/openwrt-build

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 3小时超时

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: openwrt-6.x

    - name: Setup build environment
      run: |
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils \
        rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: Prepare ccache
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-ccache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-${{ github.ref }}
          ${{ runner.os }}-ccache-

    - name: Run build script
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        chmod +x ./scripts/build-openwrt.sh
        ./scripts/build-openwrt.sh ${{ github.event.inputs.version || github.ref_name }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: openwrt-firmware
        path: ${{ env.BUILD_DIR }}/*.bin

    - name: Create release
      if: ${{ success() }}
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.BUILD_DIR }}/*.bin
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        body: |
          ### 内存优化固件
          **编译日期**: ${{ steps.get-date.outputs.date }}
          **优化特点**:
          - Slab 内存减少 40-60%
          - 内核大小优化 30%
          - 集成 zRAM 内存压缩
          - 精简非必要服务

    - name: Get current date
      id: get-date
      run: echo "date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
